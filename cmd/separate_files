#!/usr/local/bin/python3
#
# Generate separate files (into the current directory) from a Kuberbetes manifest
# Name the directory by the namespace, apiversion, and kind of the resource
# Name the file by the name of the resource
#

import os
import sys
import re
import errno
from ruamel.yaml import YAML
yaml = YAML()

input = yaml.load_all(sys.stdin)
outdir = sys.argv[1]


def convert(name):
    s1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', name)
    return re.sub('([a-z0-9])([A-Z])', r'\1_\2', s1).lower()


def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as exc:  # Python >2.5
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else:
            raise

def process(value):
    if value != None and "kind" in value:
        if value["kind"] == "List":
            for v in value["items"]:
                process(v)
        else:
            path = "%s/%s/%s" % (
                    convert(value["metadata"]["namespace"]) if "namespace" in value["metadata"] else "global",
                    value["apiVersion"],
                    value["kind"])
            name = "%s.yaml" % value["metadata"]["name"]
            mkdir_p(outdir + "/" + path)
            print(path + "/" + name)
            with open(outdir + "/" + path + "/" + name, "w") as out:
                yaml.dump(value, out)
                out.flush()

for value in input:
    process(value)


