#~/usr/bin/python


usage: expand values.yaml TemplateDir OutputDir


for pkg in TemplateDir/*
do 
   create jsonnet function that evaluates to a Json object with all manifests

def summary(templateDir, relativeDir, outputDir):
   result = {}
   for file in templateDir/relativeDir:
      name = basename(file)
      if type(file) is file && file.endsWith(.yaml):
         yaml = readYaml(file)
         json = YamlToJson(yaml)
         outputName = substitute_suffix(name, ".yaml", ".json")
         outputPath = "{outputDir}/{dir}/{outputName}" % { outputDir: outputDir, dir: dir, outputName: outputName }
         writeStringToFile(outputPath, json)
         result[file] = "import \'{outputPath}\'" % { outputPath = outputPath }
      elif type(file) is file && file.endsWith(.yaml.jsonnet):
         result[file] = "import \'{templateDir}/{relativeDir}/{file})(config, prev, namespace, pkg)" % { templateDir: templateDir, relativeDir: relativeDir, file: file}
      elif type(file) is directory:
         result[file] = summary(templateDir, relativeDir/file, outputDir)

  

