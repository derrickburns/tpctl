local common = import '../../lib/common.jsonnet';
local grafana = import '../../lib/grafana.jsonnet';

local dashboardConfig = {
  annotations: {
    list: [
      {
        builtIn: 1,
        datasource: '-- Grafana --',
        enable: true,
        hide: true,
        iconColor: 'rgba(0, 211, 255, 1)',
        name: 'Annotations & Alerts',
        type: 'dashboard',
      },
    ],
  },
  editable: false,
  gnetId: 10083,
  graphTooltip: 0,
  id: 55,
  iteration: 1601892325424,
  links: [],
  panels: [
    {
      datasource: '$datasource',
      gridPos: {
        h: 1,
        w: 24,
        x: 0,
        y: 0,
      },
      id: 17,
      title: 'Topic metrics',
      type: 'row',
    },
    {
      aliasColors: {},
      bars: false,
      cacheTimeout: null,
      dashLength: 10,
      dashes: false,
      datasource: '$datasource',
      description: "Message count is only the difference between all partitions' high and low watermarks. Therefore this count is only an approximation on compact topics",
      fieldConfig: {
        defaults: {
          custom: {},
          links: [],
        },
        overrides: [],
      },
      fill: 1,
      fillGradient: 0,
      gridPos: {
        h: 8,
        w: 8,
        x: 0,
        y: 1,
      },
      hiddenSeries: false,
      id: 15,
      legend: {
        avg: false,
        current: false,
        max: false,
        min: false,
        show: true,
        total: false,
        values: false,
      },
      lines: true,
      linewidth: 1,
      links: [],
      nullPointMode: 'null',
      options: {
        alertThreshold: true,
      },
      percentage: false,
      pluginVersion: '7.2.0',
      pointradius: 2,
      points: false,
      renderer: 'flot',
      seriesOverrides: [],
      spaceLength: 10,
      stack: false,
      steppedLine: false,
      targets: [
        {
          expr: 'max (sum by (kubernetes_pod_name) (kafka_minion_topic_partition_message_count{topic="$topic"}))',
          format: 'time_series',
          intervalFactor: 1,
          legendFormat: 'Approx Messages',
          refId: 'A',
        },
      ],
      thresholds: [],
      timeFrom: null,
      timeRegions: [],
      timeShift: null,
      title: 'Message Count $topic',
      tooltip: {
        shared: true,
        sort: 0,
        value_type: 'individual',
      },
      type: 'graph',
      xaxis: {
        buckets: null,
        mode: 'time',
        name: null,
        show: true,
        values: [],
      },
      yaxes: [
        {
          format: 'short',
          label: null,
          logBase: 1,
          max: null,
          min: '0',
          show: true,
        },
        {
          format: 'short',
          label: null,
          logBase: 1,
          max: null,
          min: null,
          show: true,
        },
      ],
      yaxis: {
        align: false,
        alignLevel: null,
      },
    },
    {
      cacheTimeout: null,
      colorBackground: false,
      colorValue: false,
      colors: [
        '#299c46',
        'rgba(237, 129, 40, 0.89)',
        '#d44a3a',
      ],
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
        },
        overrides: [],
      },
      format: 'none',
      gauge: {
        maxValue: 100,
        minValue: 0,
        show: false,
        thresholdLabels: false,
        thresholdMarkers: true,
      },
      gridPos: {
        h: 8,
        w: 4,
        x: 8,
        y: 1,
      },
      id: 19,
      interval: null,
      links: [],
      mappingType: 1,
      mappingTypes: [
        {
          name: 'value to text',
          value: 1,
        },
        {
          name: 'range to text',
          value: 2,
        },
      ],
      maxDataPoints: 100,
      nullPointMode: 'connected',
      nullText: null,
      postfix: '',
      postfixFontSize: '50%',
      prefix: '',
      prefixFontSize: '50%',
      rangeMaps: [
        {
          from: 'null',
          text: 'N/A',
          to: 'null',
        },
      ],
      sparkline: {
        fillColor: 'rgba(31, 118, 189, 0.18)',
        full: false,
        lineColor: 'rgb(31, 120, 193)',
        show: false,
      },
      tableColumn: '',
      targets: [
        {
          expr: 'avg (kafka_minion_topic_partition_count{topic="$topic"})',
          format: 'time_series',
          instant: true,
          intervalFactor: 1,
          refId: 'A',
        },
      ],
      thresholds: '',
      timeFrom: null,
      timeShift: null,
      title: 'Partition Count',
      type: 'singlestat',
      valueFontSize: '80%',
      valueMaps: [
        {
          op: '=',
          text: 'N/A',
          value: 'null',
        },
      ],
      valueName: 'current',
    },
    {
      cacheTimeout: null,
      colorBackground: false,
      colorValue: false,
      colors: [
        '#299c46',
        'rgba(237, 129, 40, 0.89)',
        '#d44a3a',
      ],
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
        },
        overrides: [],
      },
      format: 'none',
      gauge: {
        maxValue: 100,
        minValue: 0,
        show: false,
        thresholdLabels: false,
        thresholdMarkers: true,
      },
      gridPos: {
        h: 8,
        w: 4,
        x: 12,
        y: 1,
      },
      id: 20,
      interval: null,
      links: [],
      mappingType: 1,
      mappingTypes: [
        {
          name: 'value to text',
          value: 1,
        },
        {
          name: 'range to text',
          value: 2,
        },
      ],
      maxDataPoints: 100,
      nullPointMode: 'connected',
      nullText: null,
      postfix: '',
      postfixFontSize: '50%',
      prefix: '',
      prefixFontSize: '50%',
      rangeMaps: [
        {
          from: 'null',
          text: 'N/A',
          to: 'null',
        },
      ],
      sparkline: {
        fillColor: 'rgba(31, 118, 189, 0.18)',
        full: false,
        lineColor: 'rgb(31, 120, 193)',
        show: false,
      },
      tableColumn: 'cleanup_policy',
      targets: [
        {
          expr: 'kafka_minion_topic_partition_count{topic="$topic"}',
          format: 'table',
          instant: true,
          intervalFactor: 1,
          legendFormat: '',
          refId: 'A',
        },
      ],
      thresholds: '',
      timeFrom: null,
      timeShift: null,
      title: 'Cleanup Policy',
      type: 'singlestat',
      valueFontSize: '80%',
      valueMaps: [
        {
          op: '=',
          text: 'N/A',
          value: 'null',
        },
      ],
      valueName: 'first',
    },
    {
      columns: [],
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
        },
        overrides: [],
      },
      fontSize: '100%',
      gridPos: {
        h: 8,
        w: 8,
        x: 16,
        y: 1,
      },
      id: 22,
      links: [],
      pageSize: null,
      scroll: true,
      showHeader: true,
      sort: {
        col: 3,
        desc: false,
      },
      styles: [
        {
          alias: 'Time',
          align: 'auto',
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          pattern: 'Time',
          type: 'hidden',
        },
        {
          alias: '',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: 2,
          mappingType: 1,
          pattern: 'topic',
          thresholds: [],
          type: 'hidden',
          unit: 'short',
        },
        {
          alias: 'Topic Lag',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: 0,
          mappingType: 1,
          pattern: 'Value',
          thresholds: [],
          type: 'number',
          unit: 'locale',
        },
        {
          alias: 'Group',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: 2,
          mappingType: 1,
          pattern: 'group',
          thresholds: [],
          type: 'number',
          unit: 'short',
        },
        {
          alias: '',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          decimals: 2,
          pattern: '/.*/',
          thresholds: [],
          type: 'number',
          unit: 'short',
        },
      ],
      targets: [
        {
          expr: 'avg by (group, topic) (kafka_minion_group_topic_lag{topic="$topic"})',
          format: 'table',
          instant: true,
          intervalFactor: 1,
          refId: 'A',
        },
      ],
      timeFrom: null,
      timeShift: null,
      title: 'Groups consuming $topic',
      transform: 'table',
      type: 'table-old',
    },
    {
      collapsed: false,
      datasource: '$datasource',
      gridPos: {
        h: 1,
        w: 24,
        x: 0,
        y: 9,
      },
      id: 10,
      panels: [],
      title: 'Group metrics',
      type: 'row',
    },
    {
      aliasColors: {},
      bars: false,
      dashLength: 10,
      dashes: false,
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
          links: [],
        },
        overrides: [],
      },
      fill: 1,
      fillGradient: 0,
      gridPos: {
        h: 8,
        w: 8,
        x: 0,
        y: 10,
      },
      hiddenSeries: false,
      id: 4,
      legend: {
        avg: false,
        current: false,
        max: false,
        min: false,
        show: true,
        total: false,
        values: false,
      },
      lines: true,
      linewidth: 2,
      links: [],
      nullPointMode: 'connected',
      options: {
        alertThreshold: true,
      },
      paceLength: 10,
      percentage: false,
      pluginVersion: '7.2.0',
      pointradius: 2,
      points: false,
      renderer: 'flot',
      seriesOverrides: [],
      spaceLength: 10,
      stack: false,
      steppedLine: false,
      targets: [
        {
          expr: 'avg by (group,topic) (kafka_minion_group_topic_lag{group="$consumer_group", topic="$topic"})',
          format: 'time_series',
          intervalFactor: 1,
          legendFormat: '{{group}} => {{topic}}',
          refId: 'A',
        },
      ],
      thresholds: [],
      timeFrom: null,
      timeRegions: [],
      timeShift: null,
      title: 'Consumergroup => Topic Lag',
      tooltip: {
        shared: true,
        sort: 0,
        value_type: 'individual',
      },
      type: 'graph',
      xaxis: {
        buckets: null,
        mode: 'time',
        name: null,
        show: true,
        values: [],
      },
      yaxes: [
        {
          decimals: 0,
          format: 'short',
          label: 'Messages',
          logBase: 1,
          max: null,
          min: '0',
          show: true,
        },
        {
          format: 'short',
          label: null,
          logBase: 1,
          max: null,
          min: null,
          show: true,
        },
      ],
      yaxis: {
        align: false,
        alignLevel: null,
      },
    },
    {
      cacheTimeout: null,
      colorBackground: false,
      colorPostfix: false,
      colorValue: false,
      colors: [
        '#299c46',
        'rgba(237, 129, 40, 0.89)',
        '#d44a3a',
      ],
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
        },
        overrides: [],
      },
      format: 'none',
      gauge: {
        maxValue: 100,
        minValue: 0,
        show: false,
        thresholdLabels: false,
        thresholdMarkers: true,
      },
      gridPos: {
        h: 8,
        w: 4,
        x: 8,
        y: 10,
      },
      id: 23,
      interval: null,
      links: [],
      mappingType: 1,
      mappingTypes: [
        {
          name: 'value to text',
          value: 1,
        },
        {
          name: 'range to text',
          value: 2,
        },
      ],
      maxDataPoints: 100,
      nullPointMode: 'connected',
      nullText: null,
      postfix: 'commits / s',
      postfixFontSize: '50%',
      prefix: '',
      prefixFontSize: '50%',
      rangeMaps: [
        {
          from: 'null',
          text: 'N/A',
          to: 'null',
        },
      ],
      sparkline: {
        fillColor: 'rgba(31, 118, 189, 0.18)',
        full: false,
        lineColor: 'rgb(31, 120, 193)',
        show: true,
      },
      tableColumn: '',
      targets: [
        {
          expr: 'avg (sum by (kubernetes_pod_name) (rate(kafka_minion_group_topic_partition_commit_count{group="$consumer_group", topic="$topic"}[1m])))',
          format: 'time_series',
          instant: false,
          intervalFactor: 1,
          refId: 'A',
        },
      ],
      thresholds: '200, 1000',
      timeFrom: null,
      timeShift: null,
      title: 'Offset Commit Rate',
      type: 'singlestat',
      valueFontSize: '80%',
      valueMaps: [
        {
          op: '=',
          text: 'N/A',
          value: 'null',
        },
      ],
      valueName: 'current',
    },
    {
      cacheTimeout: null,
      colorBackground: false,
      colorValue: true,
      colors: [
        '#299c46',
        'rgba(237, 129, 40, 0.89)',
        '#d44a3a',
      ],
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
        },
        overrides: [],
      },
      format: 'locale',
      gauge: {
        maxValue: 100,
        minValue: 0,
        show: false,
        thresholdLabels: false,
        thresholdMarkers: true,
      },
      gridPos: {
        h: 8,
        w: 4,
        x: 12,
        y: 10,
      },
      id: 7,
      interval: null,
      links: [],
      mappingType: 1,
      mappingTypes: [
        {
          name: 'value to text',
          value: 1,
        },
        {
          name: 'range to text',
          value: 2,
        },
      ],
      maxDataPoints: 100,
      nullPointMode: 'connected',
      nullText: null,
      postfix: '',
      postfixFontSize: '50%',
      prefix: '',
      prefixFontSize: '50%',
      rangeMaps: [
        {
          from: 'null',
          text: 'N/A',
          to: 'null',
        },
      ],
      sparkline: {
        fillColor: 'rgba(31, 118, 189, 0.18)',
        full: false,
        lineColor: 'rgb(31, 120, 193)',
        show: true,
      },
      tableColumn: '',
      targets: [
        {
          expr: 'avg(kafka_minion_group_topic_lag{group="$consumer_group", topic="$topic"})',
          format: 'time_series',
          instant: false,
          intervalFactor: 1,
          refId: 'A',
        },
      ],
      thresholds: '200, 1000',
      timeFrom: null,
      timeShift: null,
      title: 'Topic Lag',
      type: 'singlestat',
      valueFontSize: '80%',
      valueMaps: [
        {
          op: '=',
          text: 'N/A',
          value: 'null',
        },
      ],
      valueName: 'current',
    },
    {
      aliasColors: {},
      bars: false,
      dashLength: 10,
      dashes: false,
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
          links: [],
        },
        overrides: [],
      },
      fill: 1,
      fillGradient: 0,
      gridPos: {
        h: 8,
        w: 8,
        x: 16,
        y: 10,
      },
      hiddenSeries: false,
      id: 5,
      legend: {
        avg: false,
        current: false,
        max: false,
        min: false,
        show: true,
        total: false,
        values: false,
      },
      lines: true,
      linewidth: 2,
      links: [],
      nullPointMode: 'connected',
      options: {
        alertThreshold: true,
      },
      paceLength: 10,
      percentage: false,
      pluginVersion: '7.2.0',
      pointradius: 2,
      points: false,
      renderer: 'flot',
      seriesOverrides: [],
      spaceLength: 10,
      stack: false,
      steppedLine: false,
      targets: [
        {
          expr: 'avg by (topic) (sum by (topic, kubernetes_pod_name) (delta(kafka_minion_group_topic_partition_offset{group="$consumer_group", topic="$topic"}[1m]) / 60))',
          format: 'time_series',
          hide: false,
          intervalFactor: 1,
          legendFormat: 'Consuming: {{$consumer_group}} => {{$topic}}',
          refId: 'A',
        },
        {
          expr: 'avg by (topic) (sum by (topic, kubernetes_pod_name) (delta(kafka_minion_topic_partition_high_water_mark{topic="$topic"}[1m]) / 60))',
          format: 'time_series',
          hide: false,
          intervalFactor: 1,
          legendFormat: 'Incoming: {{ topic }}',
          refId: 'B',
        },
      ],
      thresholds: [],
      timeFrom: null,
      timeRegions: [],
      timeShift: null,
      title: 'Messages In vs Consumed',
      tooltip: {
        shared: true,
        sort: 0,
        value_type: 'individual',
      },
      type: 'graph',
      xaxis: {
        buckets: null,
        mode: 'time',
        name: null,
        show: true,
        values: [],
      },
      yaxes: [
        {
          decimals: 0,
          format: 'short',
          label: 'Messages/s',
          logBase: 1,
          max: null,
          min: '0',
          show: true,
        },
        {
          format: 'short',
          label: null,
          logBase: 1,
          max: null,
          min: null,
          show: true,
        },
      ],
      yaxis: {
        align: false,
        alignLevel: null,
      },
    },
    {
      aliasColors: {},
      bars: false,
      dashLength: 10,
      dashes: false,
      datasource: '$datasource',
      description: '',
      fieldConfig: {
        defaults: {
          custom: {},
          links: [],
        },
        overrides: [],
      },
      fill: 1,
      fillGradient: 0,
      gridPos: {
        h: 8,
        w: 24,
        x: 0,
        y: 18,
      },
      hiddenSeries: false,
      id: 13,
      interval: '',
      legend: {
        alignAsTable: true,
        avg: true,
        current: false,
        max: false,
        min: false,
        rightSide: true,
        show: true,
        sort: 'avg',
        sortDesc: true,
        total: false,
        values: true,
      },
      lines: true,
      linewidth: 2,
      links: [],
      nullPointMode: 'connected',
      options: {
        alertThreshold: true,
      },
      paceLength: 10,
      percentage: false,
      pluginVersion: '7.2.0',
      pointradius: 2,
      points: false,
      renderer: 'flot',
      seriesOverrides: [],
      spaceLength: 10,
      stack: false,
      steppedLine: false,
      targets: [
        {
          expr: 'avg by (group,topic,partition) (kafka_minion_group_topic_partition_lag{group="$consumer_group", topic="$topic"})',
          format: 'time_series',
          interval: '',
          intervalFactor: 1,
          legendFormat: 'Partiton {{partition}}',
          refId: 'A',
        },
      ],
      thresholds: [],
      timeFrom: null,
      timeRegions: [],
      timeShift: null,
      title: 'Lag per Partition: $consumer_group => $topic',
      tooltip: {
        shared: true,
        sort: 0,
        value_type: 'individual',
      },
      type: 'graph',
      xaxis: {
        buckets: null,
        mode: 'time',
        name: null,
        show: true,
        values: [],
      },
      yaxes: [
        {
          decimals: 0,
          format: 'short',
          label: 'Messages',
          logBase: 1,
          max: null,
          min: '0',
          show: true,
        },
        {
          format: 'short',
          label: null,
          logBase: 1,
          max: null,
          min: null,
          show: true,
        },
      ],
      yaxis: {
        align: false,
        alignLevel: null,
      },
    },
    {
      columns: [],
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
        },
        overrides: [],
      },
      fontSize: '100%',
      gridPos: {
        h: 19,
        w: 24,
        x: 0,
        y: 26,
      },
      id: 2,
      links: [],
      pageSize: null,
      scroll: true,
      showHeader: true,
      sort: {
        col: 6,
        desc: true,
      },
      styles: [
        {
          alias: 'Topic',
          align: 'auto',
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          pattern: 'topic',
          type: 'string',
        },
        {
          alias: 'Partition',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          decimals: 2,
          pattern: 'partition',
          thresholds: [],
          type: 'number',
          unit: 'short',
        },
        {
          alias: '',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: 2,
          mappingType: 1,
          pattern: 'Time',
          thresholds: [],
          type: 'hidden',
          unit: 'short',
        },
        {
          alias: 'Low Water Mark',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: 0,
          mappingType: 1,
          pattern: 'Value #A',
          thresholds: [],
          type: 'number',
          unit: 'locale',
        },
        {
          alias: 'High Water Mark',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: 0,
          mappingType: 1,
          pattern: 'Value #B',
          thresholds: [],
          type: 'number',
          unit: 'locale',
        },
        {
          alias: 'Group Offset',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: 0,
          mappingType: 1,
          pattern: 'Value #C',
          thresholds: [],
          type: 'number',
          unit: 'locale',
        },
        {
          alias: 'Lag',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: null,
          mappingType: 1,
          pattern: 'Value #D',
          thresholds: [],
          type: 'number',
          unit: 'locale',
        },
        {
          alias: 'Message count',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: null,
          mappingType: 1,
          pattern: 'Value #E',
          thresholds: [],
          type: 'number',
          unit: 'locale',
        },
        {
          alias: 'Last commit',
          align: 'auto',
          colorMode: null,
          colors: [
            'rgba(245, 54, 54, 0.9)',
            'rgba(237, 129, 40, 0.89)',
            'rgba(50, 172, 45, 0.97)',
          ],
          dateFormat: 'YYYY-MM-DD HH:mm:ss',
          decimals: 2,
          mappingType: 1,
          pattern: 'Value #F',
          thresholds: [],
          type: 'date',
          unit: 'short',
        },
      ],
      targets: [
        {
          expr: 'max by (topic, partition) (kafka_minion_topic_partition_low_water_mark{topic="$topic"})',
          format: 'table',
          instant: true,
          intervalFactor: 1,
          refId: 'A',
        },
        {
          expr: 'max by (topic, partition) (kafka_minion_topic_partition_high_water_mark{topic="$topic"})',
          format: 'table',
          instant: true,
          intervalFactor: 1,
          refId: 'B',
        },
        {
          expr: 'max by (topic, partition) (kafka_minion_group_topic_partition_offset{topic="$topic", group="$consumer_group"})',
          format: 'table',
          instant: true,
          intervalFactor: 1,
          refId: 'C',
        },
        {
          expr: 'max by (topic, partition) (kafka_minion_group_topic_partition_lag{topic="$topic", group="$consumer_group"})',
          format: 'table',
          instant: true,
          intervalFactor: 1,
          refId: 'D',
        },
        {
          expr: 'max by (topic, partition) (kafka_minion_topic_partition_message_count{topic="$topic"})',
          format: 'table',
          instant: true,
          intervalFactor: 1,
          refId: 'E',
        },
        {
          expr: 'max by (topic, partition) (kafka_minion_group_topic_partition_last_commit{topic="$topic", group="$consumer_group"})',
          format: 'table',
          instant: true,
          intervalFactor: 1,
          refId: 'F',
        },
      ],
      timeFrom: null,
      timeShift: null,
      title: 'Partition Offsets',
      transform: 'table',
      type: 'table-old',
    },
    {
      collapsed: false,
      datasource: '$datasource',
      gridPos: {
        h: 1,
        w: 24,
        x: 0,
        y: 45,
      },
      id: 12,
      panels: [],
      title: 'Kafka Minion Internals',
      type: 'row',
    },
    {
      aliasColors: {},
      bars: false,
      dashLength: 10,
      dashes: false,
      datasource: '$datasource',
      fieldConfig: {
        defaults: {
          custom: {},
          links: [],
        },
        overrides: [],
      },
      fill: 1,
      fillGradient: 0,
      gridPos: {
        h: 7,
        w: 24,
        x: 0,
        y: 46,
      },
      hiddenSeries: false,
      id: 8,
      legend: {
        avg: false,
        current: false,
        max: false,
        min: false,
        show: true,
        total: false,
        values: false,
      },
      lines: true,
      linewidth: 2,
      links: [],
      nullPointMode: 'connected',
      options: {
        alertThreshold: true,
      },
      paceLength: 10,
      percentage: false,
      pluginVersion: '7.2.0',
      pointradius: 2,
      points: false,
      renderer: 'flot',
      seriesOverrides: [],
      spaceLength: 10,
      stack: false,
      steppedLine: false,
      targets: [
        {
          expr: 'avg by (kubernetes_pod_name) (rate(kafka_minion_internal_kafka_messages_in_success[1m]))',
          format: 'time_series',
          intervalFactor: 1,
          legendFormat: '{{ kubernetes_pod_name }}',
          refId: 'A',
        },
      ],
      thresholds: [],
      timeFrom: null,
      timeRegions: [],
      timeShift: null,
      title: 'Offset commits processed',
      tooltip: {
        shared: true,
        sort: 0,
        value_type: 'individual',
      },
      type: 'graph',
      xaxis: {
        buckets: null,
        mode: 'time',
        name: null,
        show: true,
        values: [],
      },
      yaxes: [
        {
          decimals: 0,
          format: 'short',
          label: 'Messages/s',
          logBase: 1,
          max: null,
          min: '0',
          show: true,
        },
        {
          format: 'short',
          label: null,
          logBase: 1,
          max: null,
          min: null,
          show: true,
        },
      ],
      yaxis: {
        align: false,
        alignLevel: null,
      },
    },
  ],
  refresh: '30s',
  schemaVersion: 26,
  style: 'dark',
  tags: [],
  templating: {
    list: [
      {
        allValue: null,
        current: {
          selected: false,
          text: 'shoreline',
          value: 'shoreline',
        },
        datasource: '$datasource',
        definition: 'label_values(kafka_minion_group_topic_partition_offset, group)',
        hide: 0,
        includeAll: false,
        label: 'Consumer Group',
        multi: false,
        name: 'consumer_group',
        options: [],
        query: 'label_values(kafka_minion_group_topic_partition_offset, group)',
        refresh: 1,
        regex: '',
        skipUrlSync: false,
        sort: 1,
        tagValuesQuery: '',
        tags: [],
        tagsQuery: '',
        type: 'query',
        useTags: false,
      },
      {
        allValue: null,
        current: {
          selected: false,
          text: 'local-todd-events',
          value: 'local-todd-events',
        },
        datasource: '$datasource',
        definition: 'label_values(kafka_minion_group_topic_partition_offset{group="$consumer_group"}, topic)',
        hide: 0,
        includeAll: false,
        label: 'Topic',
        multi: false,
        name: 'topic',
        options: [],
        query: 'label_values(kafka_minion_group_topic_partition_offset{group="$consumer_group"}, topic)',
        refresh: 1,
        regex: '',
        skipUrlSync: false,
        sort: 1,
        tagValuesQuery: '',
        tags: [],
        tagsQuery: '',
        type: 'query',
        useTags: false,
      },
      {
        hide: 0,
        includeAll: false,
        label: null,
        multi: false,
        name: 'datasource',
        current: {
          selected: false,
          text: 'Prometheus',
          value: 'Prometheus',
        },
        options: [],
        query: 'prometheus',
        refresh: 1,
        regex: '',
        skipUrlSync: false,
        type: 'datasource',
      },
    ],
  },
  time: {
    from: 'now-3h',
    to: 'now',
  },
  timepicker: {
    refresh_intervals: [
      '5s',
      '10s',
      '30s',
      '1m',
      '5m',
      '15m',
      '30m',
      '1h',
      '2h',
      '1d',
    ],
    time_options: [
      '5m',
      '15m',
      '1h',
      '6h',
      '12h',
      '24h',
      '2d',
      '7d',
      '30d',
    ],
  },
  timezone: '',
  title: 'Kafka Minion',
  uid: '0BVsKYrmkk',
  version: 2,
};

local configmap(me) = grafana.dashboard(me, '%s' % me.pkg, dashboardConfig);

function(config, prev, namespace, pkg) configmap(common.package(config, prev, namespace, pkg))
