local common = import '../../../lib/common.jsonnet';
local k8s = import '../../../lib/k8s.jsonnet';
local lib = import '../../../lib/lib.jsonnet';

local dashboardName = 'home';
local configmapName = '%s-dashboard' % dashboardName;

local configmap(me) = k8s.configmap(me, configmapName) {
  metadata+: {
    labels: {
      grafana_dashboard: configmapName,
    },
  },
  data: {
    ['%s.json' % dashboardName]: std.manifestJsonEx(
      {
        annotations: {
          list: [
            {
              builtIn: 1,
              datasource: '-- Grafana --',
              enable: true,
              hide: true,
              iconColor: 'rgba(0, 211, 255, 1)',
              name: 'Annotations & Alerts',
              type: 'dashboard',
            },
          ],
        },
        editable: true,
        gnetId: null,
        graphTooltip: 0,
        id: 57,
        links: [],
        panels: [
          {
            content: '<h3 style="text-align: center;">\nKubernetes Resources\n</h3>\n<hr/>\n\n',
            datasource: null,
            gridPos: {
              h: 2,
              w: 24,
              x: 0,
              y: 0,
            },
            id: 6,
            mode: 'html',
            options: {},
            timeFrom: null,
            timeShift: null,
            title: '',
            transparent: true,
            type: 'text',
          },
          {
            datasource: null,
            folderId: null,
            gridPos: {
              h: 9,
              w: 8,
              x: 0,
              y: 2,
            },
            headings: true,
            id: 2,
            limit: 10,
            options: {},
            query: 'cluster',
            recent: false,
            search: true,
            starred: false,
            tags: [],
            timeFrom: null,
            timeShift: null,
            title: 'Cluster',
            type: 'dashlist',
          },
          {
            datasource: null,
            folderId: null,
            gridPos: {
              h: 9,
              w: 8,
              x: 8,
              y: 2,
            },
            headings: true,
            id: 10,
            limit: 10,
            options: {},
            query: 'node',
            recent: false,
            search: true,
            starred: false,
            tags: [],
            timeFrom: null,
            timeShift: null,
            title: 'Nodes',
            type: 'dashlist',
          },
          {
            datasource: null,
            folderId: null,
            gridPos: {
              h: 9,
              w: 8,
              x: 16,
              y: 2,
            },
            headings: false,
            id: 4,
            limit: 10,
            options: {},
            query: 'pod',
            recent: false,
            search: true,
            starred: false,
            tags: [],
            timeFrom: null,
            timeShift: null,
            title: 'Pods',
            type: 'dashlist',
          },
          {
            content: '<h3 style="text-align: center;">\nAPI Gateway\n</h3>\n<hr/>\n\n',
            datasource: null,
            gridPos: {
              h: 2,
              w: 12,
              x: 0,
              y: 11,
            },
            id: 8,
            mode: 'html',
            options: {},
            timeFrom: null,
            timeShift: null,
            title: '',
            transparent: true,
            type: 'text',
          },
          {
            content: '<h3 style="text-align: center;">\nLinkerd\n</h3>\n<hr/>\n\n',
            datasource: null,
            gridPos: {
              h: 2,
              w: 12,
              x: 12,
              y: 11,
            },
            id: 9,
            mode: 'html',
            options: {},
            timeFrom: null,
            timeShift: null,
            title: '',
            transparent: true,
            type: 'text',
          },
          {
            datasource: null,
            folderId: null,
            gridPos: {
              h: 7,
              w: 6,
              x: 0,
              y: 13,
            },
            headings: true,
            id: 3,
            limit: 10,
            options: {},
            query: 'envoy',
            recent: false,
            search: true,
            starred: false,
            tags: [],
            timeFrom: null,
            timeShift: null,
            title: 'Envoy',
            type: 'dashlist',
          },
          {
            datasource: null,
            folderId: null,
            gridPos: {
              h: 7,
              w: 6,
              x: 6,
              y: 13,
            },
            headings: true,
            id: 11,
            limit: 10,
            options: {},
            query: 'gloo',
            recent: false,
            search: true,
            starred: false,
            tags: [],
            timeFrom: null,
            timeShift: null,
            title: 'Gloo',
            type: 'dashlist',
          },
          {
            datasource: null,
            folderId: null,
            gridPos: {
              h: 7,
              w: 12,
              x: 12,
              y: 13,
            },
            headings: true,
            id: 5,
            limit: 10,
            options: {},
            query: 'linkerd',
            recent: false,
            search: true,
            starred: false,
            tags: [],
            timeFrom: null,
            timeShift: null,
            title: 'Linkerd',
            type: 'dashlist',
          },
        ],
        schemaVersion: 22,
        style: 'dark',
        tags: [],
        templating: {
          list: [],
        },
        time: {
          from: 'now-6h',
          to: 'now',
        },
        timepicker: {
          refresh_intervals: [
            '5s',
            '10s',
            '30s',
            '1m',
            '5m',
            '15m',
            '30m',
            '1h',
            '2h',
            '1d',
          ],
        },
        timezone: '',
        title: 'Home',
        uid: 'HRN3fEzGk',
        version: 5,
      }, '  '
    ),
  },
};

function(config, prev, namespace, pkg) configmap(common.package(config, prev, namespace, pkg))
