local common = import '../../../lib/common.jsonnet';
local k8s = import '../../../lib/k8s.jsonnet';
local lib = import '../../../lib/lib.jsonnet';

local dashboardName = 'envoy';
local configmapName = '%s-dashboard' % dashboardName;

local configmap(me) = k8s.configmap(me, configmapName) {
  metadata+: {
    labels: {
      grafana_dashboard: configmapName,
    },
  },
  data: {
    ['%s.json' % dashboardName]: std.manifestJsonEx(
      {
        annotations: {
          list: [
            {
              builtIn: 1,
              datasource: '-- Grafana --',
              enable: true,
              hide: true,
              iconColor: 'rgba(0, 211, 255, 1)',
              name: 'Annotations & Alerts',
              type: 'dashboard',
            },
          ],
        },
        editable: true,
        gnetId: null,
        graphTooltip: 0,
        id: 92,
        links: [],
        panels: [
          {
            cacheTimeout: null,
            colorBackground: false,
            colorValue: true,
            colors: [
              '#d44a3a',
              'rgba(237, 129, 40, 0.89)',
              '#299c46',
            ],
            datasource: null,
            decimals: null,
            format: 'none',
            gauge: {
              maxValue: 100,
              minValue: 0,
              show: false,
              thresholdLabels: false,
              thresholdMarkers: true,
            },
            gridPos: {
              h: 9,
              w: 6,
              x: 0,
              y: 0,
            },
            id: 2,
            interval: null,
            links: [],
            mappingType: 1,
            mappingTypes: [
              {
                name: 'value to text',
                value: 1,
              },
              {
                name: 'range to text',
                value: 2,
              },
            ],
            maxDataPoints: 100,
            nullPointMode: 'connected',
            nullText: null,
            options: {},
            postfix: '',
            postfixFontSize: '50%',
            prefix: '',
            prefixFontSize: '50%',
            rangeMaps: [
              {
                from: 'null',
                text: 'N/A',
                to: 'null',
              },
            ],
            sparkline: {
              fillColor: 'rgba(31, 118, 189, 0.18)',
              full: false,
              lineColor: 'rgb(31, 120, 193)',
              show: false,
              ymax: null,
              ymin: null,
            },
            tableColumn: '',
            targets: [
              {
                expr: 'flux_helm_operator_release_count',
                refId: 'A',
              },
            ],
            thresholds: '0,0',
            timeFrom: null,
            timeShift: null,
            title: 'Charts Deployed',
            type: 'singlestat',
            valueFontSize: '100%',
            valueMaps: [
              {
                op: '=',
                text: 'N/A',
                value: 'null',
              },
            ],
            valueName: 'current',
          },
          {
            columns: [],
            datasource: null,
            fontSize: '100%',
            gridPos: {
              h: 9,
              w: 18,
              x: 6,
              y: 0,
            },
            id: 4,
            options: {},
            pageSize: null,
            showHeader: true,
            sort: {
              col: 8,
              desc: false,
            },
            styles: [
              {
                alias: 'Time',
                align: 'auto',
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                pattern: 'Time',
                type: 'date',
              },
              {
                alias: '',
                align: 'right',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                decimals: 2,
                pattern: '__name__',
                sanitize: false,
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'pod',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'job',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'namespace',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'instance',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'endpoint',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'service',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: 'Release Name',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'release_name',
                thresholds: [],
                type: 'number',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'condition',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: 'Target Namespace',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'target_namespace',
                thresholds: [],
                type: 'number',
                unit: 'short',
              },
            ],
            targets: [
              {
                expr: 'flux_helm_operator_release_condition_info{condition="Released"}',
                format: 'table',
                instant: true,
                legendFormat: '',
                refId: 'A',
              },
            ],
            timeFrom: null,
            timeShift: null,
            title: 'Released Charts',
            transform: 'table',
            type: 'table',
          },
          {
            columns: [],
            datasource: null,
            fontSize: '100%',
            gridPos: {
              h: 9,
              w: 18,
              x: 6,
              y: 9,
            },
            id: 5,
            options: {},
            pageSize: null,
            showHeader: true,
            sort: {
              col: 8,
              desc: false,
            },
            styles: [
              {
                alias: 'Time',
                align: 'auto',
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                pattern: 'Time',
                type: 'date',
              },
              {
                alias: '',
                align: 'right',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                decimals: 2,
                pattern: '__name__',
                sanitize: false,
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'pod',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'job',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'namespace',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'instance',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'endpoint',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'service',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: 'Release Name',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'release_name',
                thresholds: [],
                type: 'number',
                unit: 'short',
              },
              {
                alias: '',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'condition',
                thresholds: [],
                type: 'hidden',
                unit: 'short',
              },
              {
                alias: 'Target Namespace',
                align: 'auto',
                colorMode: null,
                colors: [
                  'rgba(245, 54, 54, 0.9)',
                  'rgba(237, 129, 40, 0.89)',
                  'rgba(50, 172, 45, 0.97)',
                ],
                dateFormat: 'YYYY-MM-DD HH:mm:ss',
                decimals: 2,
                mappingType: 1,
                pattern: 'target_namespace',
                thresholds: [],
                type: 'number',
                unit: 'short',
              },
            ],
            targets: [
              {
                expr: 'flux_helm_operator_release_condition_info{condition="ChartFetched"}',
                format: 'table',
                instant: true,
                legendFormat: '',
                refId: 'A',
              },
            ],
            timeFrom: null,
            timeShift: null,
            title: 'Charts fetched for release',
            transform: 'table',
            type: 'table',
          },
        ],
        schemaVersion: 22,
        style: 'dark',
        tags: [],
        templating: {
          list: [],
        },
        time: {
          from: 'now-6h',
          to: 'now',
        },
        timepicker: {
          refresh_intervals: [
            '5s',
            '10s',
            '30s',
            '1m',
            '5m',
            '15m',
            '30m',
            '1h',
            '2h',
            '1d',
          ],
        },
        timezone: '',
        title: 'Helm Operator',
        uid: 'c8qWijkGz',
        version: 3,
      }, '  '
    ),
  },
};

function(config, prev, namespace, pkg) configmap(common.package(config, prev, namespace, pkg))
