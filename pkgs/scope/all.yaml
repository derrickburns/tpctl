---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    cloud.weave.works/version: v1.0.0-269-gffdc830
  name: weave
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    name: weave-scope
  name: weave-scope
  namespace: weave
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    name: weave-scope
  name: weave-scope
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/log
  - services
  - nodes
  - namespaces
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/scale
  verbs:
  - get
  - update
- apiGroups:
  - extensions
  resources:
  - deployments/scale
  verbs:
  - get
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - volumesnapshot.external-storage.k8s.io
  resources:
  - volumesnapshots
  - volumesnapshotdatas
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    name: weave-scope
  name: weave-scope
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: weave-scope
subjects:
- kind: ServiceAccount
  name: weave-scope
  namespace: weave
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: weave-scope
    name: weave-scope-app
    weave-cloud-component: scope
    weave-scope-component: app
  name: weave-scope-app
  namespace: weave
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: weave-scope
      name: weave-scope-app
      weave-cloud-component: scope
      weave-scope-component: app
  template:
    metadata:
      labels:
        app: weave-scope
        name: weave-scope-app
        weave-cloud-component: scope
        weave-scope-component: app
    spec:
      containers:
      - args:
        - --mode=app
        - --weave=false
        command:
        - /home/weave/scope
        env: []
        image: docker.io/weaveworks/scope:1.13.0
        imagePullPolicy: IfNotPresent
        name: app
        ports:
        - containerPort: 4040
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: weave-scope
    name: weave-scope-app
    weave-cloud-component: scope
    weave-scope-component: app
  name: weave-scope-app
  namespace: weave
spec:
  ports:
  - name: app
    port: 80
    protocol: TCP
    targetPort: 4040
  selector:
    app: weave-scope
    name: weave-scope-app
    weave-cloud-component: scope
    weave-scope-component: app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: weave-scope
    name: weave-scope-cluster-agent
    weave-cloud-component: scope
    weave-scope-component: cluster-agent
  name: weave-scope-cluster-agent
  namespace: weave
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: weave-scope
      name: weave-scope-cluster-agent
      weave-cloud-component: scope
      weave-scope-component: cluster-agent
  template:
    metadata:
      labels:
        app: weave-scope
        name: weave-scope-cluster-agent
        weave-cloud-component: scope
        weave-scope-component: cluster-agent
    spec:
      containers:
      - args:
        - --mode=probe
        - --probe-only
        - --probe.kubernetes.role=cluster
        - --probe.http.listen=:4041
        - --probe.publish.interval=4500ms
        - --probe.spy.interval=2s
        - weave-scope-app.weave.svc.cluster.local:80
        command:
        - /home/weave/scope
        env: []
        image: docker.io/weaveworks/scope:1.13.0
        imagePullPolicy: IfNotPresent
        name: scope-cluster-agent
        ports:
        - containerPort: 4041
          protocol: TCP
        resources:
          requests:
            cpu: 25m
            memory: 80Mi
      serviceAccountName: weave-scope
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: weave-scope
    name: weave-scope-agent
    weave-cloud-component: scope
    weave-scope-component: agent
  name: weave-scope-agent
  namespace: weave
spec:
  minReadySeconds: 5
  selector:
    matchLabels:
      app: weave-scope
      name: weave-scope-agent
      weave-cloud-component: scope
      weave-scope-component: agent
  template:
    metadata:
      labels:
        app: weave-scope
        name: weave-scope-agent
        weave-cloud-component: scope
        weave-scope-component: agent
    spec:
      containers:
      - args:
        - --mode=probe
        - --probe-only
        - --probe.kubernetes.role=host
        - --probe.publish.interval=4500ms
        - --probe.spy.interval=2s
        - --probe.docker.bridge=docker0
        - --probe.docker=true
        - weave-scope-app.weave.svc.cluster.local:80
        command:
        - /home/weave/scope
        env: []
        image: docker.io/weaveworks/scope:1.13.0
        imagePullPolicy: IfNotPresent
        name: scope-agent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/run/scope/plugins
          name: scope-plugins
        - mountPath: /sys/kernel/debug
          name: sys-kernel-debug
        - mountPath: /var/run/docker.sock
          name: docker-socket
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - hostPath:
          path: /var/run/scope/plugins
        name: scope-plugins
      - hostPath:
          path: /sys/kernel/debug
        name: sys-kernel-debug
      - hostPath:
          path: /var/run/docker.sock
        name: docker-socket
  updateStrategy:
    type: RollingUpdate
